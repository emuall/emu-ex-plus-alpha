name: EX Emulators

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["Saturn.emu"]

    steps:
    - name: Checkout emu-ex-plus-alpha repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Decode debug keystore
      env:
        DEBUG_KEYSTORE: ${{ secrets.DEBUG_KEYSTORE }}
      run: |
        if [ -z "$DEBUG_KEYSTORE" ]
        then
          echo "No debug keystore value"
        else
          echo $DEBUG_KEYSTORE > debug.keystore.base64
          base64 --decode debug.keystore.base64 > debug.keystore
          sudo cp -f debug.keystore /root/.android/.
        fi
        
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends autoconf automake autopoint bash binutils-arm-linux-gnueabi clang cmake file gawk gettext git libtool libtool-bin llvm make nasm pkg-config unzip wget

    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up environment
      run: |
        mkdir imagine-sdk
        mkdir EX-Emulators
        wget "https://dl.google.com/android/repository/android-ndk-r26-beta1-linux.zip"
        unzip android-ndk-r26-beta1-linux.zip
        echo "ANDROID_NDK_PATH=${{ github.workspace }}/android-ndk-r26-beta1" >> $GITHUB_ENV
        echo "EMUFRAMEWORK_PATH=${{ github.workspace }}/EmuFramework" >> $GITHUB_ENV
        echo "IMAGINE_PATH=${{ github.workspace }}/imagine" >> $GITHUB_ENV
        echo "IMAGINE_SDK_PATH=${{ github.workspace }}/imagine-sdk" >> $GITHUB_ENV
        
    - name: Run script
      run: |
        cd imagine/bundle/all
        chmod +x ./makeAll-android.sh
        ./makeAll-android.sh install
      shell: bash
          
    - name: Build environment
      run: |
        make -f $IMAGINE_PATH/android-release.mk install V=1 -j2
        make -f $EMUFRAMEWORK_PATH/android-release.mk config -j2
        make -f $EMUFRAMEWORK_PATH/android-release.mk install V=1 -j2


    - name: Build Saturn
      if: ${{ matrix.image == 'Saturn.emu' }}
      run: |        
        cd Saturn.emu
        make -f android-release-9.mk android-apk V=1 -j2
        find . -name *.apk

    - name: Copy Saturn.emu artifact
      if: ${{ matrix.image == 'Saturn.emu' }}
      run: | 
        cp Saturn.emu/target/android-release-9/build/outputs/apk/release/SaturnEmu-release.apk EX-Emulators/SaturnEmu-release.apk

    - name: Upload Saturn.emu artifact
      uses: actions/upload-artifact@v3
      if: ${{ matrix.image == 'Saturn.emu' }}
      with: 
        name: Saturn.emu
        path: ${{ github.workspace }}/Saturn.emu/target/android-release-9/build/outputs/apk/release/SaturnEmu-release.apk

    - name: Upload EX-Emulators artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: EX-Emulators
        path: EX-Emulators/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout emu-ex-plus-alpha repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: dist

    - name: Re-zip artifacts
      run: |
        cd dist
        for artifact in *
        do 
          echo "-> Creating ${artifact}.zip"
          pushd "$artifact"
          zip -r "../${artifact}.zip" *
          popd
        done

    - name: Update Git Tag
      run: |
        git tag -f Pre-release
        git push -f origin Pre-release
    
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        prerelease: true
        allowUpdates: true
        removeArtifacts: true
        replacesArtifacts: false
        tag: Pre-release
        artifacts: "dist/*.zip"
